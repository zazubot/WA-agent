services:
  # Qdrant vector database service for long-term memory storage
  qdrant:
    image: qdrant/qdrant:latest # Use latest official Qdrant image
    ports:
      - "6333:6333" # Expose Qdrant port for external access
    volumes:
      - ./long_term_memory:/qdrant/storage # Persist vector database data
    restart: unless-stopped # Automatically restart if container stops

  # Chainlit web interface service
  chainlit:
    build:
      context: . # Build from current directory
      dockerfile: Dockerfile.chainlit # Use specific Chainlit Dockerfile
    ports:
      - "8000:8000" # Expose Chainlit interface on port 8000
    env_file:
      - .env # Load environment variables from .env file
    environment:
      # Qdrant connection configuration
      - QDRANT_PORT=6333
      - QDRANT_API_KEY=None
      - QDRANT_HOST=localhost
      - QDRANT_URL=http://qdrant:6333
    restart: unless-stopped
    volumes:
      - ./short_term_memory:/app/data # Mount short-term memory storage
    depends_on:
      - qdrant # Ensure Qdrant starts before Chainlit

  # WhatsApp integration service
  whatsapp:
    build:
      context: . # Build from current directory
      dockerfile: Dockerfile # Use main Dockerfile
    ports:
      - "8080:8080" # Expose WhatsApp service port
    env_file:
      - .env # Load environment variables from .env file
    environment:
      # Qdrant connection configuration
      - QDRANT_PORT=6333
      - QDRANT_API_KEY=None
      - QDRANT_HOST=localhost
      - QDRANT_URL=http://qdrant:6333
    restart: unless-stopped
    volumes:
      - ./short_term_memory:/app/data # Mount short-term memory storage
    depends_on:
      - qdrant # Ensure Qdrant starts before WhatsApp service
